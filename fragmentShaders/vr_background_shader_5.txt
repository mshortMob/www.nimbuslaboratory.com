precision highp float;
precision highp int;

uniform float time;
varying vec2 vUv;
uniform sampler2D backbuffer;

#define TAU 6.28318530718
#define MAX_ITER 5


void main( void ) {

	
	float t = time * .015+23.0;
	// uv should be the 0-1 uv of texture...
	vec2 uv = vUv*4.;
	vec2 p = mod(uv*TAU, TAU)-250.0;
	vec2 i = vec2(p);
	float c = 1.7;
	float inten = .005;

	for (int n = 0; n < MAX_ITER; n++) 
	{
		float t = t * (1.5 - (3.5 / float(n+1)));
		i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));
		c += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));
	}
	c /= float(MAX_ITER);
	c = 1.17-pow(c, 1.4);
	vec3 colour = vec3(pow(abs(c), 8.0));
	colour = clamp(colour + vec3(0.0, 0.0, 0.0), 0.0, 1.0);
	
	vec4 shadow = texture2D(backbuffer, p);
	vec2 p2=vUv*4.-2.;
	vec4 temp=vec4(vec3(colour.r,colour.g,colour.b), (colour.r,colour.g,colour.b)/3.0);
	temp=temp*vec4(vec3(1.-sin(p2.x-time/4.9),(1.-sin(p2.x-time/5.5))+sin(p2.y-time/4.9), sin(p2.x-time/5.5)),1.0)*2.;
	//temp+=shadow*.3;
	temp=vec4(temp.r,temp.g,temp.b,(temp.r+temp.g+temp.b)/3.);
	gl_FragColor = temp;
}
